<%- include("../../views/partials/admin/header") %>

<main id="main" class="main">

  <div class="pagetitle">
    <h1>Add Product Offer</h1>
    <nav>
      <ol class="breadcrumb">

        <li class="breadcrumb-item"><a href="/admin">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="/admin/products">Products</a></li>
        <li class="breadcrumb-item active"><a href="/admin/addProductOffer">Add Product Offer</a></li>
      </ol>
    </nav>
  </div><!-- End Page Title -->

  <section class="section">
    <div class="row">
      <div class="col-lg-12">

<div class="card">
  <div class="card-body">
    <h5 class="card-title">Add Product Offer</h5>

    <form class="row g-3"  onsubmit="validateAndSubmit(event)">

      <div class="col-md-6">
        <div class="form-floating">
          <input type="text" class="form-control" id="offerType" placeholder="Offer Type" name="offerType" value="Product">
          <label for="floatingOfferType">Offer Type</label>
          <div id="offerType-error" class="error-message"></div>
        </div>
      </div>
      <div class="col-md-6">
        <div class="form-floating mb-3">
            <select name="discountType"  class="form-select" id="floatingSelect" aria-label="Floating label select example">
                <option value="Percentage">Percentage</option>
                <option value="Flat">Flat</option>
            </select>
            <label class="form-label" for="">Discount Type</label>
            <div id="discountType-error" class="error-message"></div>
        </div>
      </div>
      <div class="col-md-6">
        <div class="form-floating">
          <input type="number" class="form-control" id="value" placeholder="Offer Value" name="value">
          <label for="floatingValue">Value</label>
          <div id="value-error" class="error-message"></div>
        </div>
      </div>
      <div class="col-md-6">
        <div class="form-floating">
          <input type="date" class="form-control" id="startDate" placeholder="Offer Start Date" name="startDate">
          <label for="floatingStartDate">Start Date</label>
          <div id="startDate-error" class="error-message"></div>
        </div>
      </div>
      <div class="col-md-6">
        <div class="form-floating">
          <input type="date" class="form-control" id="endDate" placeholder="Offer End Date" name="endDate">
          <label for="floatingEndDate">End Date</label>
          <div id="endDate-error" class="error-message"></div>
        </div>
      </div>
      <div class="text-center">
        <button type="submit" class="btn btn-primary">Add Offer</button>
      </div>
    </form>

  </div>
</div>
</div>
</div>
</section>

</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.js"></script>

<script>
function validateAndSubmit(event) {
      event.preventDefault();
  
      if (!validateForm()) return;
  
      const form = event.target;
      const formData = Object.fromEntries(new FormData(form));
  
      fetch('/admin/addProductOffer/<%=product._id%>', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json',
          },
          body: JSON.stringify(formData),
      })
          .then(response => {
            return response.json().then(data => {
                if (!response.ok) {
                    throw new Error(data.message || 'HTTP error: ' + response.status);
                }
                return data;
            });
          })
          .then(data => {
              Swal.fire({
                  icon: data.type,
                  title: data.message,
                  showConfirmButton: true,
                  timer: 1500,
              }).then(() => {
                  if (data.type === 'success') {
                      window.location.href = '/admin/products';
                  }else{
                    Swal.fire({
                      icon:'error',
                      title:data.message,
                      showConfirmButton:true,
                      timer:1500
                    });
                  }
              });
          })
          .catch(error => {
              console.error('Error:', error);
              Swal.fire({
                  icon: 'error',
                  title: error.message ,
                  showConfirmButton: true,
                  timer: 1500,
              });
          });
  }
  
  
      function validateForm(){
  
          clearErrorMessages();
          const offerType = document.getElementsByName('offerType')[0].value;
          const discountType = document.getElementsByName('discountType')[0].value;
          const value = document.getElementsByName('value')[0].value;
          const startDate = document.getElementsByName('startDate')[0].value;
          const endDate = document.getElementsByName('endDate')[0].value;
          let isValid = true;
  
          if(offerType === ""){
              displayErrorMessage('offerType-error','Please enter a offer type.');
              isValid = false;
          }
          if(discountType === ""){
              displayErrorMessage('discountType-error','Please select a discount type.');
              isValid = false;
          }
          
          if (!/^\d+(\.\d{1,2})?$/.test(value) || parseFloat(value) < 0) {
              displayErrorMessage('value-error', 'Please enter a valid non-negative value.');
              isValid = false;
          }
  
          if(startDate === ""){
              displayErrorMessage('startDate-error','Please enter a start date for offer');
              isValid = false;
          }else if(startDate>endDate){
              displayErrorMessage('startDate-error','start Date is not after the endDate');
          }else{
            const currentDate = new Date();
            const selectedDate = new Date(startDate);
            if(selectedDate <= currentDate-1){
                displayErrorMessage('startDate-error','start date cannot be in the past');
                isValid = false;
            }
          }
          if(endDate === ""){
              displayErrorMessage('endDate-error','Please enter a end date for offer');
              isValid = false;
          }else if(endDate<startDate){
              displayErrorMessage('endDate-error','end Date is not before the startDate');
          }else{
            const currentDate = new Date();
            const selectedDate = new Date(endDate);
            if(selectedDate < currentDate){
                displayErrorMessage('startDate-error','end date cannot be in the past');
                isValid = false;
            }
          }
          
          return isValid;
      }
  
      
  
      function displayErrorMessage(elementId, message) {
          var errorElement = document.getElementById(elementId);
          errorElement.innerText = message;
          errorElement.style.display = "block";
          errorElement.style.color = 'red';
      }
      
      
      function clearErrorMessages() {
          const errorElements = document.getElementsByClassName('error-message');
          Array.from(errorElements).forEach(element => {
              element.innerText = '';
              element.style.display = 'none';
          });
         
      }
</script>
<%- include("../../views/partials/admin/footer") %>