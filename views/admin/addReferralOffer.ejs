<%- include('../../views/partials/admin/header') %>
<div class="header" id="addCoupon">
    <h2 class="text-center">Add Referral Offer</h2>
    <form action="/admin/addReferral" method="POST" onsubmit="validateAndSubmit(event)">
        <div class="form-group">
            <label for="code">Referral Code</label>
            <input type="text" id="code" name="code" class="form-control" required>
            <p id="code-error" class="error-message"></p>
        </div>
        <div class="form-group">
            <label for="rewardType">Reward Type</label>
            <select id="rewardType" name="rewardType" class="form-control">
                <option value="Percentage">Percentage</option>
                <option value="Flat">Flat</option>
            </select>
            <p id="rewardType-error" class="error-message"></p>
        </div>
        <div class="form-group">
            <label for="rewardValue">Reward Value</label>
            <input type="number" id="rewardValue" name="rewardValue" class="form-control" >
            <p id="rewardValue-error" class="error-message"></p>
        </div>
        <button type="submit" class="btn btn-info">Create Referral Code</button>
    </form>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
function validateAndSubmit(event) {
    event.preventDefault();

    if (!validateForm()) return;

    const form = event.target;
    const formData = Object.fromEntries(new FormData(form));

    fetch(form.action, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
    })
        .then(response => {
            if (!response.ok) {
                throw new Error('HTTP error: ' + response.status);
            }
            return response.json();
        })
        .then(data => {
            Swal.fire({
                icon: data.type,
                title: data.message,
                showConfirmButton: true,
                timer: 1500,
            }).then(() => {
                if (data.type === 'success') {
                    window.location.href = '/admin/referrals';
                }
            });
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Something went wrong!',
                showConfirmButton: true,
                timer: 1500,
            });
        });
}


    function validateForm(){

        clearErrorMessages();
        const name = document.getElementsByName('code')[0].value;
        const rewardType = document.getElementsByName('rewardType')[0].value;
        const rewardValue = document.getElementsByName('rewardValue')[0].value;
        
        let isValid = true;

        if(code === ""){
            displayErrorMessage('code-error','Please enter a code');
            isValid = false;
        }

        if(!rewardType){
        displayErrorMessage('rewardType-error','Please select a reward type.');
        isValid = false;
        }

        if(!/^\d+(\.\d{1,2})?$/.test(rewardValue) || parseFloat(rewardValue) <= 0){
        displayErrorMessage('rewardValue-error','Please enter a valid reward value');
        isValid = false;
        }
        
        return isValid;
    }

    

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
    
    
    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName('error-message');
        Array.from(errorElements).forEach(element => {
            element.innerText = '';
            element.style.display = 'none';
        });
       
    }
</script>

</body>
</html>